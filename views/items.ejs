<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nkwegu medicals</title>
    <link rel="stylesheet" href="../css/items.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <meta name="theme-color" 
  content="#ffffff">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css">
</head>
<body>
   
    <div class="mobile-search-bar"> 
        <input type="search" name="" id="" placeholder="Search...">
         
        <div id="cart-icon">
            <div class="cart">
                <span id="cart-count" style=" "></span>
                <img src="./css/images/cart for menu.png" alt="">
               
            </div>
            
        </div>
    </div>
    <button id="backToTopBtn" onclick="scrollToTop()">^^</button>
    <div class="item-body">
        <h2 style="color: #0D7BD9;">Items</h2>
        <div class="items-tab">
            <% items.forEach(item => { %>
                <div class="sep">
                    <img src="<%= item.image_url %>" alt="<%= item.name %> Image">
                    <h3><%= item.name %></h3>
                    <p><strong>Description:</strong> <%= item.description %></p>
                    <p class="price"><strong>Price:</strong> <%= item.price %></p>
                    <input type="hidden" class="item-id" value="<%= item.id %>">
                    <button class="add-to-cart-button">ADD TO CART</button>
                </div>
            <% }); %>
        </div><br><br>

        
        <div id="toast"></div>
        
    </div>
    <div class="bottom-menu">
        <a href="index.html"><img src="./css/images/home.png" alt=""></a>
        <a href="#"><img src="./css/images/cart.png" alt=""></a>
        <a href="#"><img src="./css/images/account.png" alt=""></a>
        <a href="/profile"><img src="./css/images/favourites.png" alt=""></a>
      </div>
    <script>
         var backToTopBtn = document.getElementById("backToTopBtn");

// When the user scrolls down even a little bit, show the button
window.onscroll = function() {
  if (document.body.scrollTop > 0 || document.documentElement.scrollTop > 0) {
    backToTopBtn.classList.add("show");
  } else {
    backToTopBtn.classList.remove("show");
  }
};

// Scroll to the top of the document when the button is clicked
function scrollToTop() {
  document.body.scrollTop = 0; // For Safari
  document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
}
       document.addEventListener('DOMContentLoaded', function() {
    // Check if the user has an ID stored in local storage
    let userId = localStorage.getItem('userId');
    if (!userId) {
        // If no ID exists, generate a new one
        userId = generateUserId();
        // Store the new ID in local storage
        localStorage.setItem('userId', userId);
    }

    updateCartCount();

    // Function to generate a unique user ID
    function generateUserId() {
        return 'user_' + Math.random().toString(36).substr(2, 9);
    }

    const addToCartButtons = document.querySelectorAll('.add-to-cart-button');

    addToCartButtons.forEach(button => {
        const itemId = button.previousElementSibling.value; // Get item ID from hidden input
        
        // Retrieve existing cart items from local storage or initialize an empty array
        let cartItems = JSON.parse(localStorage.getItem('cart')) || [];
        
        // Check if the item is already in the cart
        const itemIndex = cartItems.findIndex(item => item.id === itemId);
        if (itemIndex !== -1) {
            // Item is in the cart, so update button style and text
            button.textContent = 'REMOVE FROM CART'; // Change button text to "REMOVE FROM CART"
            button.style.backgroundColor = '#E8C872'; // Change button background color
        }

        button.addEventListener('click', function(event) {
            event.preventDefault(); // Prevent default form submission
            
            // Retrieve existing cart items from local storage or initialize an empty array
            let cartItems = JSON.parse(localStorage.getItem('cart')) || [];
            
            // Check if the item is already in the cart
            const itemIndex = cartItems.findIndex(item => item.id === itemId);
            if (itemIndex !== -1) {
                // Item is already in the cart, so remove it
                cartItems.splice(itemIndex, 1);
                button.textContent = 'ADD TO CART'; // Change button text back to "ADD TO CART"
                button.style.backgroundColor = '#0D7BD9'; // Change button background color back to default
            } else {
                // Item is not in the cart, so add it
                const itemName = button.parentElement.querySelector('h3').textContent.trim(); // Get item name
                const itemPrice = button.parentElement.querySelector('.price').textContent.trim(); // Get item price
                cartItems.push({ id: itemId, name: itemName, price: itemPrice, userId: userId });
                button.textContent = 'REMOVE FROM CART'; // Change button text to "REMOVE FROM CART"
                button.style.backgroundColor = '#E8C872'; // Change button background color
            }
            
            // Store the updated cart items array back in local storage
            localStorage.setItem('cart', JSON.stringify(cartItems));

            updateCartCount();
            // Optionally, provide visual feedback to the user (e.g., display a confirmation message)
            alert('Item updated in cart!');
        });
    });

    function updateCartCount() {
        const cartItems = JSON.parse(localStorage.getItem('cart')) || [];
        const cartCount = cartItems.length;
        document.getElementById('cart-count').textContent = cartCount;
    }
});

    </script>
</body>
</html>
